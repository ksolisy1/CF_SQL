SQL query with multiple joins
Used to find the top and bottom 10 films by name, rating, category, and total revenue.
To find bottom 10 films ORDER BY was changed from DESC to ASC


SELECT A.title, A.rating, C.name AS category, sum(f.amount) AS total_revenue
FROM film A
INNER JOIN film_category B ON A.film_id = B.film_id
INNER JOIN category C ON B.category_id = C.category_id
INNER JOIN inventory D ON A.film_id = D.film_id
INNER JOIN rental E ON D.inventory_id = E.inventory_id
INNER JOIN payment F ON E.rental_id =F.rental_id
GROUP BY A.title, A.rating, category
ORDER by total_revenue DESC
LIMIT 10
